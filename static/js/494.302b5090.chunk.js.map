{"version":3,"file":"static/js/494.302b5090.chunk.js","mappings":"uRAIaA,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MAuBjB,MAAO,CACLC,QAtBaC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASH,MAAM,IAuBvDG,UAtBeF,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAK,IAuBxDC,WAtBgBJ,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASG,MAAM,IAuB1DC,OAtBYN,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASI,KAAK,IAuBrDC,UArBgB,SAAAC,GAChBX,GAASY,EAAAA,EAAAA,GAAaD,GACxB,EAoBEE,YAlBkB,WAClBb,EAASc,EAAAA,EAAAA,cACX,EAiBEC,WAfiB,SAAAC,GACjBhB,EAASc,EAAAA,EAAAA,WAA8BE,GACzC,EAcEC,cAZoB,SAAAC,GACpBlB,EAASc,EAAAA,EAAAA,cAAiCI,GAC5C,EAYF,E,oBCjCaC,EAAe,WAC1B,IAAAC,EAAiCrB,IAAzBM,EAAQe,EAARf,SAAUU,EAAUK,EAAVL,WAClBM,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAME,cAAtBT,EAAIQ,EAAJR,KAAMd,EAAKsB,EAALtB,MACD,SAATc,GAAiBC,EAAQf,GAChB,WAATc,GAAmBK,EAAUnB,EACnC,EAEMwB,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMP,GAAK,IAAAQ,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC9BX,EAAMY,iBACAJ,EAAU,CAAEf,KAAAA,EAAMI,OAAAA,GACPxB,EAASwC,MACxB,SAAAC,GAAC,OAAIA,EAAErB,KAAKsB,gBAAkBP,EAAQf,KAAKsB,aAAa,KAGxDC,EAAAA,EAAAA,IAAU,GAADC,OAAIxB,EAAI,QAAAwB,OAAOpB,EAAM,6BAE9Bd,EAAW,CAAEU,KAAAA,EAAMI,OAAAA,KACnBqB,EAAAA,EAAAA,IAAa,8LAEfxB,EAAQ,IACRI,EAAU,IAAI,wBAAAW,EAAAU,OAAA,GAAAZ,EAAA,KACf,gBAdiBa,GAAA,OAAAhB,EAAAiB,MAAA,KAAAC,UAAA,KAgBlB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,EAAAA,gBAAkBC,UAChCC,EAAAA,EAAAA,MAAA,QAAMH,UAAWC,EAAAA,EAAAA,gBAAmBG,SAAUzB,EAAauB,SAAA,EACzDH,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLpC,KAAK,OACLd,MAAOc,EACPqC,SAAU/B,EACVgC,YAAY,OACZC,QAAQ,yHACRC,MAAM,8ZACNC,UAAQ,KAGVX,EAAAA,EAAAA,KAAA,SACEM,KAAK,MACLpC,KAAK,SACLd,MAAOkB,EACPiC,SAAU/B,EACVgC,YAAY,eACZC,QAAQ,yFACRC,MAAM,mgBACNC,UAAQ,KAGVX,EAAAA,EAAAA,KAAA,UAAQM,KAAK,SAASL,UAAWC,EAAAA,EAAAA,UAAYC,SAAC,oBAMtD,EC5DaS,EAAS,WACpB,IAAA/C,EAA8BrB,IAAtBG,EAAMkB,EAANlB,OAAQQ,EAASU,EAATV,UAChB,OACEiD,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,EAAAA,gBAAkBC,SAAA,EAChCH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,EAAAA,YAAcC,SAAC,6BAC9BH,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLpC,KAAK,SACLd,MAAOT,EACP6D,YAAY,uBACZD,SAAU,SAAAM,GAAC,OAAI1D,EAAU0D,EAAEC,OAAO1D,MAAM,MAIhD,E,oBCPa2D,EAAe,WAC1B,IAAMC,GAAapE,EAAAA,EAAAA,IAAYqE,EAAAA,EAAAA,eAEzBxE,GAAWC,EAAAA,EAAAA,MACjBmB,EACErB,IADMM,EAAQe,EAARf,SAAUE,EAASa,EAATb,UAAWL,EAAMkB,EAANlB,OAAQe,EAAaG,EAAbH,cAAeP,EAASU,EAATV,WAGpD+D,EAAAA,EAAAA,YAAU,WACRzE,EAASc,EAAAA,EAAAA,cACX,GAAG,CAACd,IACJ,IAOM0E,EAPe,WACnB,IAAMC,EAAmBzE,EAAO6C,cAChC,OAAe,OAAR1C,QAAQ,IAARA,OAAQ,EAARA,EAAUH,QAAO,SAAAsC,GAAO,OAC7BA,EAAQf,KAAKsB,cAAc6B,SAASD,EAAiB,GAEzD,CAEyBE,GAEzB,OACElB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CACGnD,IAAagD,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,IACpBP,IACChB,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,EAAAA,iBAAmBC,SAC/BrD,GACCqE,EAAiBK,KAAI,SAAA3C,GAA2B,IAAxBlB,EAAEkB,EAAFlB,GAAIO,EAAIW,EAAJX,KAAMI,EAAMO,EAANP,OAChC,OACE8B,EAAAA,EAAAA,MAAA,MAAIH,UAAWC,EAAAA,EAAAA,KAAOC,SAAA,EACpBC,EAAAA,EAAAA,MAAA,MAAIH,UAAWC,EAAAA,EAAAA,WAAaC,SAAA,CAAEjC,EAAK,QACnC8B,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAAA,EAAAA,WAAaC,SAAE7B,KAC7B0B,EAAAA,EAAAA,KAAA,UACEC,UAAWC,EAAAA,EAAAA,UACXI,KAAK,SACLmB,QAAS,WACP/D,EAAcC,IACd+D,EAAAA,EAAAA,IAAY,GAADhC,OAAIxB,EAAI,SAAAwB,OAAQpB,EAAM,gBACjCnB,EAAU,GACZ,EAAEgD,SACH,aAXyBxC,EAgBhC,QAKZ,ECxCA,EAbiB,WACf,OACEyC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,EAAAA,gBAAkBC,SAAA,EAChCH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,EAAAA,YAAcC,SAAC,oDAG9BH,EAAAA,EAAAA,KAACpC,EAAY,KACboC,EAAAA,EAAAA,KAACY,EAAM,KACPZ,EAAAA,EAAAA,KAACe,EAAY,MAGnB,C","sources":["components/Hooks/hooks.js","components/ContactsForm.jsx","components/Filter.jsx","components/ContactsList.jsx","views/Contacts.jsx"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/Contacts/contactsSlice';\nimport { contactsOperations } from '../../redux/Contacts/contactsOps';\n\nexport const useContacts = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(state => state.contacts.filter);\n  const contacts = useSelector(state => state.contacts.items);\n  const isLoaging = useSelector(state => state.contacts.loader);\n  const error = useSelector(state => state.contacts.error);\n\n  const setFilter = value => {\n    dispatch(changeFilter(value));\n  };\n\n  const getContacts = () => {\n    dispatch(contactsOperations.getContacts());\n  };\n\n  const addContact = data => {\n    dispatch(contactsOperations.addContact(data));\n  };\n\n  const deleteContact = id => {\n    dispatch(contactsOperations.deleteContact(id));\n  };\n\n  return {\n    filter,\n    contacts,\n    isLoaging,\n    error,\n    setFilter,\n    getContacts,\n    addContact,\n    deleteContact,\n  };\n};\n","import { useState } from 'react';\nimport s from '../Styles.module.css';\nimport { useContacts } from './Hooks/hooks';\nimport { infoToast, successToast } from './Toasts';\n\nexport const ContactsForm = () => {\n  const { contacts, addContact } = useContacts();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const contact = { name, number };\n    const isExists = contacts.some(\n      i => i.name.toLowerCase() === contact.name.toLowerCase()\n    );\n    if (isExists) {\n      infoToast(`${name} or ${number} is already in contacts`);\n    } else {\n      addContact({ name, number });\n      successToast('–ö–æ–Ω—Ç–∞–∫—Ç —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ –¥–æ —Å–ø–∏—Å–∫—É üòÉ');\n    }\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={s.cont__container}>\n      <form className={s.form__container} onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Z–∞-—è–ê-–Ø]+(([' -][a-zA-Z–∞-—è–ê-–Ø ])?[a-zA-Z–∞-—è–ê-–Ø]*)*$\"\n          title=\"–ù–∞–∑–≤–∞ –º–æ–∂–µ –º—ñ—Å—Ç–∏—Ç–∏ –ª–∏—à–µ –ª—ñ—Ç–µ—Ä–∏, –∞–ø–æ—Å—Ç—Ä–æ—Ñ, —Ç–∏—Ä–µ —Ç–∞ –ø—Ä–æ–±—ñ–ª–∏. –ù–∞–ø—Ä–∏–∫–ª–∞–¥ Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –º–∞—î —Å–∫–ª–∞–¥–∞—Ç–∏—Å—è –∑ —Ü–∏—Ñ—Ä —ñ –º–æ–∂–µ –º—ñ—Å—Ç–∏—Ç–∏ –ø—Ä–æ–±—ñ–ª–∏, —Ç–∏—Ä–µ, –∫—Ä—É–≥–ª—ñ –¥—É–∂–∫–∏ —Ç–∞ –º–æ–∂–µ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ +\"\n          required\n        />\n\n        <button type=\"submit\" className={s.form__btn}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","import s from '../Styles.module.css';\nimport { useContacts } from './Hooks/hooks';\n\nexport const Filter = () => {\n  const { filter, setFilter } = useContacts();\n  return (\n    <div className={s.cont__container}>\n      <h2 className={s.home__title}>Filter contacts by name</h2>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\"Find contact by name\"\n        onChange={e => setFilter(e.target.value)}\n      />\n    </div>\n  );\n};\n","import s from '../Styles.module.css';\nimport { Loader } from './Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useContacts } from './Hooks/hooks';\nimport { contactsOperations } from '../redux/Contacts/contactsOps';\nimport { deleteToast } from './Toasts';\nimport { useSelector } from 'react-redux';\nimport authSelectors from '../redux/Author/author-selectors';\n\nexport const ContactsList = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  const dispatch = useDispatch();\n  const { contacts, isLoaging, filter, deleteContact, setFilter } =\n    useContacts();\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n  const findContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = findContacts();\n\n  return (\n    <div>\n      {isLoaging && <Loader />}\n      {isLoggedIn && (\n        <ul className={s.items__container}>\n          {contacts &&\n            filteredContacts.map(({ id, name, number }) => {\n              return (\n                <li className={s.item} key={id}>\n                  <h3 className={s.item__name}>{name}:</h3>\n                  <p className={s.item__name}>{number}</p>\n                  <button\n                    className={s.user__btn}\n                    type=\"button\"\n                    onClick={() => {\n                      deleteContact(id);\n                      deleteToast(`${name} tel:${number} is deleted`);\n                      setFilter('');\n                    }}\n                  >\n                    Delete\n                  </button>\n                </li>\n              );\n            })}\n        </ul>\n      )}\n    </div>\n  );\n};\n","import s from '../Styles.module.css';\nimport { ContactsForm } from '../components/ContactsForm';\nimport { Filter } from '../components/Filter';\nimport { ContactsList } from '../components/ContactsList';\n\nconst Contacts = () => {\n  return (\n    <div className={s.view__container}>\n      <h2 className={s.home__title}>\n        Enter a name and phone number to add a contact\n      </h2>\n      <ContactsForm />\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["useContacts","dispatch","useDispatch","filter","useSelector","state","contacts","items","isLoaging","loader","error","setFilter","value","changeFilter","getContacts","contactsOperations","addContact","data","deleteContact","id","ContactsForm","_useContacts","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","handleChange","event","_event$currentTarget","currentTarget","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","contact","_context","prev","next","preventDefault","some","i","toLowerCase","infoToast","concat","successToast","stop","_x","apply","arguments","_jsx","className","s","children","_jsxs","onSubmit","type","onChange","placeholder","pattern","title","required","Filter","e","target","ContactsList","isLoggedIn","authSelectors","useEffect","filteredContacts","normalizedFilter","includes","findContacts","Loader","map","onClick","deleteToast"],"sourceRoot":""}